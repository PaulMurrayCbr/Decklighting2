# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 4.1

# Default target executed when no arguments are given to make.
default_target: all

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/bash
UNAME_S := $(shell uname -s)

ifeq ($(UNAME_S),Darwin)
    SRCDIRS := src/core src/osx
    CXX := clang++
    CXXFLAGS := -std=c++11
else ifeq ($(UNAME_S),Linux)
    SRCDIRS := src/core src/pi
else
    $(error Unsupported platform: $(UNAME_S))
endif

# Collect all .cpp files in the chosen directories
SOURCES := $(foreach dir,$(SRCDIRS),$(wildcard $(dir)/*.cpp))
OBJECTS := $(SOURCES:.cpp=.o)
EXECUTABLE := decklighting2

# default git label
LABEL=Makefile build succeeded
STRIPPEDLABEL  := $(strip $(LABEL))
DASHEDLABEL := $(shell echo $(NAME) | sed -e 's/[[:space:]]+/-/g')

# The main clean target
clean:
	rm $(OBJECTS) $(EXECUTABLE)

# Help Target
help:
	@echo
	@echo -e "Decklighting2 - raspberry pi / react implemetation of the decklighting"
	@echo
	@echo -e "targets:"
	@echo -e "\tall:\tbuild the decklighting2 executable (default)"
	@echo -e "\tclean"
	@echo -e "\thelp:\tthis help"
	@echo

all: $(EXECUTABLE) # maybe_save

ifeq ($(UNAME_S),Darwin)
maybe_save: save
else
maybe_save: 
endif

save: $(EXECUTABLE)
	@if [ -z "$(LABEL)" ]; then \
	    echo "Error: LABEL cannot be blank"; \
	    exit 1; \
	fi
	git add .
	git commit -m "$(LABEL)" && git push --all || true
	
push: $(EXECUTABLE) save
	@echo LABEL "[$(LABEL)]"
	@echo STRIPPEDLABEL "[$(STRIPPEDLABEL)]"
	@echo DASHEDLABEL "[$(DASHEDLABEL)]"
	@if [ "$(LABEL)" = "Makefile build succeeded" ]; then \
	    echo "Error: MYVAR cannot be 'forbidden'"; \
	    exit 1; \
	fi
	git branch -f "feature/$(DASHEDLABEL)"
	git push --all
	

send:
	rsync -av --exclude='*.o' src/ p@neopixel.local:/home/p/decklighting2/src
	rsync -av web/ p@neopixel.local:/home/p/decklighting2/web
	rsync -av Makefile p@neopixel.local:/home/p/decklighting2/Makefile


$(EXECUTABLE): $(OBJECTS)
	$(CXX) $(CXXFLAGS) -o $@ $^

%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<



